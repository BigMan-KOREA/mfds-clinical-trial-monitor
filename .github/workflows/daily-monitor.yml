name: MFDS Daily Monitor

on:
  schedule:
    - cron: '0 0 * * *'  # KST 09:00
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install Chrome dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        
    - name: Install Chrome and ChromeDriver
      run: |
        # Chrome 설치
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # ChromeDriver 설치
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | awk -F'.' '{print $1}')
        wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}" -O /tmp/chromedriver_version
        CHROMEDRIVER_VERSION=$(cat /tmp/chromedriver_version)
        wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O /tmp/chromedriver.zip
        unzip -o /tmp/chromedriver.zip -d /tmp/
        sudo mv /tmp/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
    
    - name: Install Python packages
      run: |
        pip install --upgrade pip
        pip install selenium pandas openpyxl
    
    - name: Run monitoring
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
      run: |
        python mfds_monitor.py
    
    - name: Check results
      if: always()
      run: |
        echo "Checking for output files..."
        ls -la *.csv 2>/dev/null || echo "No CSV files found"
        ls -la *.xlsx 2>/dev/null || echo "No Excel files found"
    
    - name: Upload data
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: monitor-data-${{ github.run_number }}
        path: |
          previous_data.csv
          *.xlsx
        if-no-files-found: warn
